---
import portfolioData from '../data/portfolio.json';

export interface Props {
  property: {
    id: number;
    slug: string;
    title: string;
    address?: string;
    type?: string;
    design?: string;
    website?: string;
    content: string;
    featuredImage?: string;
    featuredVideo?: string;
    gallery?: string[];
    highlights?: string[];
  };
}

const { property } = Astro.props;

// Get all properties and filter out the current one
const allProperties = portfolioData.properties;
const currentPropertyIndex = allProperties.findIndex(
  (p) => p.id === property.id
);

// Create a list of other properties starting from the next one in order
let otherProperties = [];
if (currentPropertyIndex !== -1) {
  // Get properties after current one
  const propertiesAfter = allProperties.slice(currentPropertyIndex + 1);
  // Get properties before current one
  const propertiesBefore = allProperties.slice(0, currentPropertyIndex);
  // Combine them (after + before) to maintain order but exclude current
  otherProperties = [...propertiesAfter, ...propertiesBefore];
} else {
  // Fallback: if current property not found, show all others
  otherProperties = allProperties.filter((p) => p.id !== property.id);
}

// Calculate layout based on media count
const totalMedia =
  (property.featuredVideo ? 1 : 0) +
  (property.featuredImage ? 1 : 0) +
  (property.gallery ? property.gallery.length : 0);
const layoutClass = totalMedia >= 4 ? 'grid-layout' : 'flex-layout';

// Get website URL without protocol for display
const websiteDisplay = property.website
  ? property.website.replace(/^https?:\/\//, '')
  : '';
---

<main class="page-wrapper">
  <div class="container">
    <!-- Mobile Gallery -->
    {
      property.gallery && property.gallery.length > 0 && (
        <div class="glide glide-gallery glide-first">
          <div class="glide__track" data-glide-el="track">
            <ul class="glide__slides">
              {property.featuredVideo && (
                <li class="glide__slide">
                  <video
                    class="gallery-video loaded"
                    playsinline
                    autoplay
                    muted
                    loop
                    width="689"
                    height="400"
                  >
                    <source src={property.featuredVideo} type="video/mp4" />
                  </video>
                </li>
              )}
              {property.featuredImage && !property.featuredVideo && (
                <li class="glide__slide">
                  <img
                    class="gallery-image"
                    src={property.featuredImage}
                    alt="Featured Image"
                    width="689"
                    height="400"
                    transition:name={`property-image-${property.id}`}
                  />
                </li>
              )}
              {property.gallery.map((image, index) => (
                <li class="glide__slide">
                  <img
                    class="gallery-image"
                    src={image}
                    alt={`${property.title} gallery image ${index + 1}`}
                    width="689"
                    height="400"
                  />
                </li>
              ))}
            </ul>
          </div>
          <div class="glide__arrows" data-glide-el="controls">
            <button class="glide__arrow glide__arrow--left" data-glide-dir="<">
              <div class="arrow-left" />
            </button>
            <button class="glide__arrow glide__arrow--right" data-glide-dir=">">
              <div class="arrow-right" />
            </button>
          </div>
        </div>
      )
    }

    <div class="property-wrapper">
      <!-- Desktop Image Sidebar -->
      <div class={`images-sidebar ${layoutClass}`}>
        {
          property.featuredVideo && (
            <div class="gallery-item" data-index="0">
              <video
                class="property-featured-img loaded"
                playsinline
                autoplay
                muted
                loop
                width="689"
              >
                <source src={property.featuredVideo} type="video/mp4" />
              </video>
            </div>
          )
        }
        {
          property.featuredImage && !property.featuredVideo && (
            <img
              class="property-featured-img gallery-item"
              src={property.featuredImage}
              data-index="0"
              width="689"
              alt={`${property.title} featured image`}
              transition:name={`property-image-${property.id}`}
            />
          )
        }
        {
          property.gallery &&
            property.gallery.map((image, index) => (
              <img
                src={image}
                alt={`${property.title} gallery image ${index + 1}`}
                class="gallery-item"
                data-index={index + 1}
                width="689"
                height="400"
              />
            ))
        }
      </div>

      <!-- Property Info -->
      <div class="property-info-wrapper">
        <div class="property-info">
          <h1>{property.title}</h1>
          <div set:html={property.content} />

          {/* Count paragraphs to show read more button if needed */}
          {
            property.content && property.content.split('<p>').length > 2 && (
              <button class="read-more-property">Read More</button>
            )
          }

          <div class="details">
            {
              property.address && (
                <div class="detail">
                  <h4>Address</h4>
                  <p>{property.address}</p>
                </div>
              )
            }
            {
              property.type && (
                <div class="detail">
                  <h4>Project Type</h4>
                  <p>{property.type}</p>
                </div>
              )
            }
            {
              property.design && (
                <div class="detail">
                  <h4>Design</h4>
                  <p>{property.design}</p>
                </div>
              )
            }
            {
              property.website && (
                <div class="detail">
                  <h4>Web Site</h4>
                  <div class="website">
                    <svg
                      width="13.56"
                      height="17.873"
                      viewBox="0 0 13.56 17.873"
                    >
                      <g clip-path="url(#clip-path)">
                        <path
                          d="M11.018,54.256a3.654,3.654,0,0,1-1.009,2.78c-1.34,1.361-2.678,2.725-4.053,4.05a3.544,3.544,0,0,1-4.935.023,3.582,3.582,0,0,1-.069-4.938c.449-.492.937-.947,1.405-1.421.215-.218.472-.309.7-.08s.144.487-.071.7c-.439.44-.886.874-1.316,1.322a2.658,2.658,0,0,0-.041,3.773,2.654,2.654,0,0,0,3.724-.031q2.029-1.975,4-4.006a2.624,2.624,0,0,0,.018-3.765,2.671,2.671,0,0,0-3.728.045c-.277.257-.575.761-.973.342-.436-.458.123-.756.408-1.008a3.45,3.45,0,0,1,3.887-.691,3.2,3.2,0,0,1,2.049,2.9"
                          transform="translate(0 -44.226)"
                        />
                        <path
                          d="M30.143,3.365A3.494,3.494,0,0,1,29.2,5.937c-.423.455-.873.887-1.311,1.328-.212.214-.451.309-.7.077s-.142-.486.062-.7c.4-.414.823-.811,1.221-1.229a2.638,2.638,0,0,0,.053-3.769,2.656,2.656,0,0,0-3.776.063q-1.979,1.933-3.913,3.912A2.655,2.655,0,0,0,20.73,9.4a2.682,2.682,0,0,0,3.728.033c.083-.073.156-.161.245-.225a.435.435,0,0,1,.649.072c.179.214.081.4-.072.593a3.721,3.721,0,0,1-3.714,1.04,3.416,3.416,0,0,1-2.4-2.836,3.513,3.513,0,0,1,.971-3C21.475,3.713,22.807,2.34,24.2,1.029A3.452,3.452,0,0,1,28.085.3a3.272,3.272,0,0,1,2.059,3.062"
                          transform="translate(-16.584 0)"
                        />
                      </g>
                    </svg>
                    <a target="_blank" href={property.website}>
                      {websiteDisplay}
                    </a>
                  </div>
                </div>
              )
            }
            {
              property.highlights &&
                Array.isArray(property.highlights) &&
                property.highlights.length > 0 && (
                  <div class="detail highlights-detail">
                    <h4>Highlights</h4>
                    <div class="highlights-grid">
                      {property.highlights.map((highlight) => (
                        <div class="highlight-item">{highlight}</div>
                      ))}
                    </div>
                  </div>
                )
            }
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Additional Projects Slider -->
  <div class="glide-posts-container">
    <h3>Additional Projects</h3>
    <div class="glide glide-posts">
      <div class="glide__track" data-glide-el="track">
        <ul class="glide__slides">
          {
            otherProperties.map((proj) => (
              <li class="glide__slide">
                <a
                  href={`/portfolio/${proj.slug}`}
                  class="building-wrapper-slider"
                >
                  <div
                    class="building-slider"
                    style={`background-image: url('${proj.featuredImage}');`}
                  />
                  <p>{proj.title}</p>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
      <div class="glide__arrows" data-glide-el="controls">
        <button class="glide__arrow glide__arrow--left" data-glide-dir="<">
          <div class="arrow-left"></div>
        </button>
        <button class="glide__arrow glide__arrow--right" data-glide-dir=">">
          <div class="arrow-right"></div>
        </button>
      </div>
    </div>
  </div>
</main>

<!-- Gallery Modal -->
<div id="galleryModal" class="modal" transition:persist>
  <div class="modal-content">
    <div class="glide glide-modal">
      <div class="glide__track" data-glide-el="track">
        <ul class="glide__slides">
          {
            property.featuredVideo && (
              <li class="glide__slide">
                <video class="modal-media" playsinline controls>
                  <source src={property.featuredVideo} type="video/mp4" />
                </video>
              </li>
            )
          }
          {
            property.featuredImage && !property.featuredVideo && (
              <li class="glide__slide">
                <img
                  class="modal-media"
                  src={property.featuredImage}
                  alt={`${property.title} featured image`}
                />
              </li>
            )
          }
          {
            property.gallery &&
              property.gallery.map((image, index) => (
                <li class="glide__slide">
                  <img
                    class="modal-media"
                    src={image}
                    alt={`${property.title} gallery image ${index + 1}`}
                  />
                </li>
              ))
          }
        </ul>
      </div>
      <div class="glide__arrows" data-glide-el="controls">
        <button class="glide__arrow glide__arrow--left" data-glide-dir="<">
          <div class="arrow-left"></div>
        </button>
        <button class="glide__arrow glide__arrow--right" data-glide-dir=">">
          <div class="arrow-right"></div>
        </button>
      </div>
    </div>
  </div>
  <span class="close">&times;</span>
</div>
<script>
  function handleImagesSidebarLayout() {
    const imagesSidebars = document.querySelectorAll('.images-sidebar');

    imagesSidebars.forEach((sidebar) => {
      const directImages = sidebar.querySelectorAll(':scope > img');

      if (directImages.length < 3) {
        sidebar.style.gridTemplateColumns = 'none';
      } else {
        sidebar.style.gridTemplateColumns = ''; // Reset to CSS default
      }
    });
  }
  document.addEventListener('DOMContentLoaded', handleImagesSidebarLayout);
</script>
